from math import *
import numpy as np
import matplotlib.pyplot as plt

def rungeKutta(df, x0, y0, X):

    # Criando listas de coordenadas com as coordenadas iniciais:
    X = [x0] + X
    Y = [y0]
    n = len(X)

    for k in range(1, n):
        h = X[k] - X[k-1]
        m1 = df(X[k-1], Y[k-1])
        m2 = df(X[k-1] + h/2, Y[k-1] + m1*h/2)
        m3 = df(X[k-1] + h/2, Y[k-1] + m2*h/2)
        m4 = df(X[k-1] + h, Y[k-1] + m3*h)
        yk = Y[k-1] + (1/6)*(m1 + 2*m2 + 2*m3 + m4)*h  
        Y.append(yk)
    return X, Y

if __name__ == '__main__':
    

    # Exemplo 01:

    # Constantes:
    t0 = 0
    p0 = 0.0015
    λ = 0.026
    μ = 0.00712
    r = 0.14527

    # Número de indivíduos na população no tempo t:
    def dx(x, t):
        return (λ - μ)*x

    # Número de indivíduos rebeldes na população no tempo t:
    def dxn(xn, x, t):
        return (λ - μ)*xn + r*λ*(x - xn)

    # Proporção de rebeldes na população no tempo t:
    def p(xn, x):
        return xn/x

    # Derivada da proporção de rebeldes na população no tempo t:
    def dp(t, p_t):
        return r*λ*(1-p_t)

    # Solução da equação diferencial:
    def pt(t):
        return 1 - 0.9985*e**(-r*λ*t)
    
    T = [0.0901, 1.16094, 1.52345, 2.32689, 2.94853, 3.93227, 4.52895, 5.22328, 5.57552, 6.1138, 7.06075, 7.93183, 8.1394, 9.17748, 9.76722, 10.15404, 11.15881, 11.67177, 12.14685, 12.97546, 13.78861, 14.51053, 14.86911, 15.85428, 16.57326, 17.16561, 17.75712, 18.26577, 18.80148, 19.52657, 20.12462, 20.96866, 21.42935, 22.37101, 22.88547, 23.72414, 24.25873, 25.24292, 25.91479, 26.15716, 27.24185, 27.86331, 28.35712, 28.78368, 29.85879, 30.34841, 30.92834, 31.92204, 32.38723, 33.17047, 33.79702, 34.55789, 35.00597, 35.74817, 36.26643, 36.77278, 37.83109, 38.30207, 39.02237, 39.82001, 40.4455, 41.16558, 41.47401, 42.49392, 43.11855, 43.53573, 44.11251, 45.15842, 45.40776, 46.44494, 46.85237, 47.58347, 48.3078, 49.01419, 49.44329, 50.31907, 50.96222, 51.75102, 52.32394, 53.23791, 53.87421, 54.38663, 55.21355, 55.87591, 56.39391, 56.842, 57.92734, 58.3587, 58.9919, 59.78553, 60.16961, 60.74332, 61.76721, 62.21593, 62.79911, 63.46706, 64.5639, 64.90711, 65.9067, 66.20191, 66.77955, 67.85521, 68.3214, 68.94894, 69.64001, 70.44515, 71.05886, 71.48988, 72.21974, 73.22108, 73.89281, 74.35016, 74.98921, 75.92719, 76.59998, 76.99864, 77.51203, 78.37153, 79.02008, 79.61748, 80.51123, 81.12328, 81.47936, 82.33309, 82.88427, 83.83231, 84.59986, 84.73812, 85.90957, 86.28449, 86.93364, 87.45178, 88.32339, 89.2278, 89.93049, 90.59499, 91.11082, 91.91632, 92.53453, 92.77956, 93.6917, 94.45502, 95.07682, 95.71423, 96.21393, 97.06575, 97.71664, 98.1974, 99.14359, 99.52967]


    T, P = rungeKutta(dp, t0, p0, T)

    print(P)

    Erros = []
    for t, pk in zip(T, P):
        erro = abs(pt(t) - pk)
        Erros.append(erro)

    for pk, erro in zip(P, Erros):
        print(f"{pk}, {erro},") 