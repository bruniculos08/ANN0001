from math import *
import numpy as np
import matplotlib.pyplot as plt

def heun(df, x0, y0, X):

    # Criando listas de coordenadas com as coordenadas iniciais:
    X = [x0] + X
    Y = [y0]
    n = len(X)

    for k in range(1, n):
        h = X[k] - X[k-1]
        m1 = df(X[k-1], Y[k-1])
        m2 = df(X[k-1] + h, Y[k-1] + m1*h)
        yk = Y[k-1] + (h/2)*(m1 + m2)
        Y.append(yk)
    return Y

if __name__ == '__main__':

    # Exemplo 01:

    # Equação obtida para a derivada primeira de y na equação diferencial:

    k = 0.0534*pi

    def E(t):
        return e**(-k*t) * sin(2*t - pi)

    def dE(t):
        return e**(-k*t) * (-k*sin(2*t - pi) + 2*cos(2*t - pi))

    def ddE(t):
        return (-4*k*cos(2*t - pi) + (-4 + k**2)*sin(2*t - pi)) * (e**(-k*t))

    C = 0.3908
    R = 1.1994
    L = 1.9828

    def df(x, y):
        return C*ddE(x) + (1/R)*dE(x) + (1/L)*E(x)
    
    # Restrição de valor inicial: 
    x0 = 0
    y0 = 0
    
    X = [0.0894, 0.1823, 0.2584, 0.3321, 0.4545, 0.5328, 0.6734, 0.7833, 0.8631, 0.9247, 1.0675, 1.1373, 1.2597, 1.3854, 1.4298, 1.5304, 1.628, 1.753, 1.8199, 1.9146, 2.0376, 2.1644, 2.2494, 2.3212, 2.4746, 2.5643, 2.669, 2.714, 2.8629, 2.9432, 3.0371, 3.1716, 3.2515, 3.3269, 3.4124, 3.5442, 3.6677, 3.7663, 3.8737, 3.9824, 4.0851, 4.1217, 4.2436, 4.3718, 4.4312, 4.5325, 4.6256, 4.7155, 4.8798, 4.9307, 5.0179, 5.1867, 5.2139, 5.3534, 5.4214, 5.5666, 5.6654, 5.7436, 5.8259, 5.9336, 6.0186, 6.151, 6.2753, 6.367, 6.434, 6.5449, 6.6558, 6.75, 6.8413, 6.9432, 7.061, 7.1536, 7.2763, 7.3558, 7.4358, 7.5692, 7.6537, 7.7461, 7.8133, 7.9591, 8.0815, 8.1748, 8.2629, 8.3369, 8.4584, 8.5881, 8.6292, 8.7566, 8.8645, 8.9353, 9.0532, 9.1628, 9.22, 9.3212, 9.4418, 9.548, 9.6171, 9.7138, 9.8665, 9.9149, 10.0807, 10.1723, 10.2501, 10.3702, 10.4501, 10.5397, 10.6451, 10.7853, 10.853, 10.9895, 11.0825, 11.1892, 11.2871, 11.3789, 11.4855, 11.5148, 11.6215, 11.7568, 11.8877, 11.9285, 12.039, 12.1424, 12.2286, 12.3247, 12.4407, 12.537, 12.6344, 12.7283, 12.8389, 12.9445, 13.0615, 13.1363, 13.2824, 13.3187, 13.4544, 13.5256, 13.6302, 13.7675, 13.862, 13.9623, 14.0218, 14.1824, 14.233, 14.3248, 14.4143, 14.5899, 14.6284, 14.754, 14.837, 14.9812]

    Y = heun(df, x0, y0, X)
    # t = np.linspace(x0, n*h, 200)
    # ft = [f(ti) for ti in t]

    print(Y)

    # plt.plot(t, ft, color = "green")
    plt.scatter([x0] + X, Y, label = "blue")
    plt.savefig("Exercício24 (corrente).png")
    # plt.close()