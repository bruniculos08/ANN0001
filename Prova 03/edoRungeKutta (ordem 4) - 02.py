from math import *
import numpy as np
import matplotlib.pyplot as plt

def rungeKutta(df, x0, y0, X):

    # Criando listas de coordenadas com as coordenadas iniciais:
    X = [x0] + X
    Y = [y0]
    n = len(X)

    for k in range(1, n):
        h = X[k] - X[k-1]
        m1 = df(X[k-1], Y[k-1])
        m2 = df(X[k-1] + h/2, Y[k-1] + m1*h/2)
        m3 = df(X[k-1] + h/2, Y[k-1] + m2*h/2)
        m4 = df(X[k-1] + h, Y[k-1] + m3*h)
        yk = Y[k-1] + (1/6)*(m1 + 2*m2 + 2*m3 + m4)*h  
        Y.append(yk)
    return X, Y

if __name__ == '__main__':
    

    # Exemplo 01:

    # Constantes:
    t0 = 0
    p0 = 0.00169
    λ = 0.02189
    μ = 0.00562
    r = 0.10586

    # Número de indivíduos na população no tempo t:
    def dx(x, t):
        return (λ - μ)*x

    # Número de indivíduos rebeldes na população no tempo t:
    def dxn(xn, x, t):
        return (λ - μ)*xn + r*λ*(x - xn)

    # Proporção de rebeldes na população no tempo t:
    def p(xn, x):
        return xn/x

    # Derivada da proporção de rebeldes na população no tempo t:
    def dp(t, p_t):
        return r*λ*(1-p_t)

    # Solução da equação diferencial:
    c = p0 - 1
    print(c, "\n\n")
    def pt(t):
        return 1 - c*e**(-r*λ*t)
    
    T = [0.22202, 0.73833, 1.76548, 2.13628, 3.19486, 3.8146, 4.17406, 5.14016, 5.90284, 6.16283, 6.75819, 7.90226, 8.27462, 9.09921, 9.72353, 10.41781, 11.23227, 11.65809, 12.1288, 12.86343, 13.41878, 14.46325, 15.12432, 15.84784, 16.28863, 16.79791, 17.7658, 18.49269, 19.09803, 19.87142, 20.11612, 21.16406, 21.9171, 22.31263, 22.77625, 23.79936, 24.58466, 25.03739, 25.4217, 26.47367, 26.80434, 27.44639, 28.35033, 28.76649, 29.63505, 30.48921, 31.03695, 31.42376, 32.12139, 32.76508, 33.72374, 34.35965, 34.75431, 35.56717, 36.10783, 37.15379, 37.84235, 38.25515, 39.20022, 39.59792, 40.20055, 41.10064, 41.63751, 42.2174, 43.2297, 43.65221, 44.40634, 45.22703, 45.55881, 46.47783, 47.03153, 47.77528, 48.40774, 49.1861, 49.72846, 50.14229, 51.01386, 51.44533, 52.31224, 53.25571, 53.89747, 54.35974, 54.81451, 55.83922, 56.43753, 56.97145, 57.68305, 58.52454, 58.82084, 59.87128, 60.54268, 60.93295, 61.8514, 62.44659, 62.77573, 63.54974, 64.46309, 64.92231, 65.93225, 66.10762, 66.77443, 67.59258, 68.18669, 68.91827, 69.60787, 70.18126, 70.87564, 71.5547, 72.16042, 73.09082, 73.52483, 74.33858, 74.79146, 75.45176, 76.50467, 76.8367, 77.84732, 78.25708, 78.96817, 79.54435, 80.1685, 81.16896, 81.82283, 82.44903, 83.22834, 83.91028, 84.20401, 84.93112, 85.88119, 86.28737, 86.74712, 87.5451, 88.24836, 88.78507, 89.92229, 90.5133, 91.22585, 91.73898, 92.41934, 93.14259, 93.65038, 94.33489, 95.08428, 95.7823, 96.29279, 96.90283, 97.83079, 98.37555, 99.03492, 99.54163]

    T, P = rungeKutta(dp, t0, p0, T)

    Erros = []
    for t, pk in zip(T, P):
        erro = abs(pt(t) - pk)
        Erros.append(erro)

    for pk, erro in zip(P, Erros):
        print(f"{pk}, {erro},") 